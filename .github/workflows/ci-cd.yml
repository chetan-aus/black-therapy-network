name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the project
      - name: Build the project
        run: npm run build

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # Step 7: Add SSH key for EC2 connection
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 8: Deploy Docker container to EC2 instance
      - name: Deploy to EC2
            # Pull the latest Docker image from Docker Hub
            # Stop and remove the existing container (if running)
            # Run a new container with the pulled image
            # Optionally, clean up old unused Docker images
        run: |
          ssh -tt -o StrictHostKeyChecking=no mailto:ubuntu@ec2-13-201-78-137.ap-south-1.compute.amazonaws.com << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest

            docker stop backend || true
            docker rm backend || true

            docker run -d -p 8000:8000 --name backend ${{ secrets.DOCKER_USERNAME }}/backend:latest

            docker image prune -f
          EOF
